https://practice.geeksforgeeks.org/problems/bfs-traversal-of-graph/1

//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
class Solution {
  public:
    // Function to return Breadth First Traversal of given graph.
    vector<int> bfsOfGraph(int V, vector<int> adj[]) {
        queue<int>q1;
        vector<int>ans;
        
        unordered_set<int>visited;
        
        q1.push(0);
        ans.push_back(0);
        if(V==0)return ans;
        visited.insert(0);
        
        
        while(!q1.empty())
        {
            int n=q1.size();
            
            for(int i=0;i<n;i++)
            {
                int num=q1.front();
                
                q1.pop();
                    visited.insert(num);
                    
                    for(auto j:adj[num])
                    {
                        if(!visited.count(j))
                        {
                            ans.push_back(j);
                            if(j==V)
                            return ans;
                            visited.insert(j);
                            q1.push(j);
                        }
                    }
            }
            
        }
        
        return ans;
    }
};

//{ Driver Code Starts.
int main() {
    int tc;
    cin >> tc;
    while (tc--) {
        int V, E;
        cin >> V >>

            E;

        vector<int> adj[V];

        for (int i = 0; i < E; i++) {
            int u, v;
            cin >> u >> v;
            adj[u].push_back(v);
            // 		adj[v].push_back(u);
        }
        // string s1;
        // cin>>s1;
        Solution obj;
        vector<int> ans = obj.bfsOfGraph(V, adj);
        for (int i = 0; i < ans.size(); i++) {
            cout << ans[i] << " ";
        }
        cout << endl;
    }
    return 0;
}
// } Driver Code Ends