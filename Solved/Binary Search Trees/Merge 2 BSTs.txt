https://www.codingninjas.com/codestudio/problems/h_920474?leftPanelTab=0&utm_source=youtube&utm_medium=affiliate&utm_campaign=Lovebabbar44

#include <bits/stdc++.h> 
/*************************************************************
    
    Following is the Binary Tree node structure:

    class TreeNode{

        public :
            int data;
            TreeNode *left;
            TreeNode *right;

            TreeNode(int data) {
                this -> data = data;
                left = NULL;
                right = NULL;
            }

            ~TreeNode() {
            if (left){
            delete left;
            }

            if (right){
            delete right;
            }
        }   
    };

*************************************************************/
void solve(TreeNode<int>* root, vector<int>&inOrder)
    {
        if(root==NULL)return;

        solve(root->left,inOrder);
        inOrder.push_back(root->data);
        solve(root->right,inOrder);
    }

TreeNode<int>* buildTree(vector<int>inOrder,int s, int e)
{
    int n=inOrder.size();
    if(s>e)return NULL;

    int mid=(s+e)/2;

    TreeNode<int>* newNode = new TreeNode<int>(inOrder[mid]);

    newNode->left=buildTree(inOrder,s,mid-1);

    newNode->right=buildTree(inOrder,mid+1,e);

    return newNode;
}

TreeNode<int> *mergeBST(TreeNode<int> *root1, TreeNode<int> *root2){
    vector<int>v1;
    vector<int>v2;

    solve(root1,v1);
    solve(root2,v2);

    for(auto i:v2)
    v1.push_back(i);
    
    sort(v1.begin(),v1.end());

    return buildTree(v1,0,v1.size()-1);
}