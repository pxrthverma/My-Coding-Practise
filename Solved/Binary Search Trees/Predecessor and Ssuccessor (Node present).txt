https://www.codingninjas.com/codestudio/problems/_893049?topList=love-babbar-dsa-sheet-problems&leftPanelTab=1

#include <bits/stdc++.h> 
/*************************************************************

    Following is the Binary Tree node structure

    template <typename T>

    class BinaryTreeNode
    {
    public :
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }

        ~BinaryTreeNode() {
            if (left)
            {
                delete left;
            }
            if (right)
            {
                delete right;
            }
        }
    };

*************************************************************/

pair<int,int> predecessorSuccessor(BinaryTreeNode<int>* root, int key)
{
    BinaryTreeNode<int>* temp=root;

    int pred=-1,succ=-1;

    while(temp->data!=key)
    {
        if(temp->data > key)
        {
            succ=temp->data;
            temp=temp->left;
        }

        else
        {
            pred=temp->data;
            temp=temp->right;
        }
    }

    
    //finding predecessor

    BinaryTreeNode<int>* leftTree;
    BinaryTreeNode<int>* rightTree;

    if(temp->left)
    {
        leftTree=temp->left;

        while(leftTree && leftTree->right!=NULL)
        leftTree=leftTree->right;

        pred=leftTree->data;
    }


    //finding successor
    if(temp->right)
    {
        rightTree=temp->right;
        while(rightTree && rightTree->left!=NULL)
        rightTree=rightTree->left;

        succ=rightTree->data;
    }

    return make_pair(pred,succ);

}
