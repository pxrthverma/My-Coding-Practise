https://leetcode.com/problems/binary-tree-preorder-traversal/submissions/893807169/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */

(Recursive)
class Solution {
public:
    void solve(TreeNode*&node, vector<int>&ans)\
    {
        if(node==NULL)
        return;

        ans.push_back(node->val);
        solve(node->left,ans);
        solve(node->right,ans);
    }

    vector<int> preorderTraversal(TreeNode* root) {
        vector<int>ans;
        solve(root,ans);
        return ans;
    }
};

(Itervative)
class Solution {
public:
    vector<int> preorderTraversal(TreeNode* root) {
        vector<int>ans;
       
        if(root==NULL)
        return ans;
        
        // solve(root,ans);
        stack<TreeNode*>s1;
        s1.push(root);
        TreeNode* temp=root;
        while(!s1.empty())
        {
            temp=s1.top();
            s1.pop();
            ans.push_back(temp->val);

            if(temp->right!=NULL)
            s1.push(temp->right);

            if(temp->left!=NULL)
            s1.push(temp->left);
        }

        return ans;
    }
};